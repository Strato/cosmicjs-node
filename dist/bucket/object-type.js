"use strict";

var _require = require('../helpers/constants'),
    URI = _require.URI;

var HTTP_METHODS = require('../helpers/http_methods');

var _require2 = require('../helpers/request_handler'),
    requestHandler = _require2.requestHandler;

var headers;

var objectTypeMethods = function objectTypeMethods(bucket_config) {
  return {
    getObjectTypes: function getObjectTypes(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types?read_key=").concat(bucket_config.read_key);
      return requestHandler(HTTP_METHODS.GET, endpoint);
    },
    getObjectType: function getObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug, "?read_key=").concat(bucket_config.read_key);
      return requestHandler(HTTP_METHODS.GET, endpoint);
    },
    addObjectType: function addObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types");

      if (bucket_config.write_key) {
        headers = {
          "Authorization": "Bearer ".concat(bucket_config.write_key)
        };
      }

      return requestHandler(HTTP_METHODS.POST, endpoint, params, headers);
    },
    editObjectType: function editObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug);

      if (bucket_config.write_key) {
        headers = {
          "Authorization": "Bearer ".concat(bucket_config.write_key)
        };
      } // Remove slug


      delete params.slug;
      return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers);
    },
    deleteObjectType: function deleteObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug);

      if (bucket_config.write_key) {
        headers = {
          "Authorization": "Bearer ".concat(bucket_config.write_key)
        };
      }

      return requestHandler(HTTP_METHODS.DELETE, endpoint, null, headers);
    }
  };
};

module.exports = objectTypeMethods;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiVVJJIiwiSFRUUF9NRVRIT0RTIiwicmVxdWVzdEhhbmRsZXIiLCJoZWFkZXJzIiwib2JqZWN0VHlwZU1ldGhvZHMiLCJidWNrZXRfY29uZmlnIiwiZ2V0T2JqZWN0VHlwZXMiLCJwYXJhbXMiLCJlbmRwb2ludCIsInNsdWciLCJyZWFkX2tleSIsIkdFVCIsImdldE9iamVjdFR5cGUiLCJhZGRPYmplY3RUeXBlIiwid3JpdGVfa2V5IiwiUE9TVCIsImVkaXRPYmplY3RUeXBlIiwiUEFUQ0giLCJkZWxldGVPYmplY3RUeXBlIiwiREVMRVRFIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idWNrZXQvb2JqZWN0LXR5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBVUkkgfSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvY29uc3RhbnRzJylcbmNvbnN0IEhUVFBfTUVUSE9EUyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaHR0cF9tZXRob2RzJylcbmNvbnN0IHsgcmVxdWVzdEhhbmRsZXIgfSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvcmVxdWVzdF9oYW5kbGVyJylcbmxldCBoZWFkZXJzO1xuY29uc3Qgb2JqZWN0VHlwZU1ldGhvZHMgPSAoYnVja2V0X2NvbmZpZykgPT4gKHtcbiAgZ2V0T2JqZWN0VHlwZXM6IChwYXJhbXMpID0+IHtcbiAgICBsZXQgZW5kcG9pbnQgPSBgJHtVUkl9L2J1Y2tldHMvJHtidWNrZXRfY29uZmlnLnNsdWd9L29iamVjdC10eXBlcz9yZWFkX2tleT0ke2J1Y2tldF9jb25maWcucmVhZF9rZXl9YFxuICAgIHJldHVybiByZXF1ZXN0SGFuZGxlcihIVFRQX01FVEhPRFMuR0VULCBlbmRwb2ludClcbiAgfSxcbiAgZ2V0T2JqZWN0VHlwZTogKHBhcmFtcykgPT4ge1xuICAgIGxldCBlbmRwb2ludCA9IGAke1VSSX0vYnVja2V0cy8ke2J1Y2tldF9jb25maWcuc2x1Z30vb2JqZWN0LXR5cGVzLyR7cGFyYW1zLnNsdWd9P3JlYWRfa2V5PSR7YnVja2V0X2NvbmZpZy5yZWFkX2tleX1gXG4gICAgcmV0dXJuIHJlcXVlc3RIYW5kbGVyKEhUVFBfTUVUSE9EUy5HRVQsIGVuZHBvaW50KVxuICB9LFxuICBhZGRPYmplY3RUeXBlOiAocGFyYW1zKSA9PiB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBgJHtVUkl9L2J1Y2tldHMvJHtidWNrZXRfY29uZmlnLnNsdWd9L29iamVjdC10eXBlc2BcbiAgICBpZiAoYnVja2V0X2NvbmZpZy53cml0ZV9rZXkpIHtcbiAgICAgIGhlYWRlcnMgPSB7XG4gICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiBgQmVhcmVyICR7YnVja2V0X2NvbmZpZy53cml0ZV9rZXl9YFxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdEhhbmRsZXIoSFRUUF9NRVRIT0RTLlBPU1QsIGVuZHBvaW50LCBwYXJhbXMsIGhlYWRlcnMpXG4gIH0sXG4gIGVkaXRPYmplY3RUeXBlOiAocGFyYW1zKSA9PiB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBgJHtVUkl9L2J1Y2tldHMvJHtidWNrZXRfY29uZmlnLnNsdWd9L29iamVjdC10eXBlcy8ke3BhcmFtcy5zbHVnfWBcbiAgICBpZiAoYnVja2V0X2NvbmZpZy53cml0ZV9rZXkpIHtcbiAgICAgIGhlYWRlcnMgPSB7XG4gICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiBgQmVhcmVyICR7YnVja2V0X2NvbmZpZy53cml0ZV9rZXl9YFxuICAgICAgfVxuICAgIH1cbiAgICAvLyBSZW1vdmUgc2x1Z1xuICAgIGRlbGV0ZSBwYXJhbXMuc2x1ZztcbiAgICByZXR1cm4gcmVxdWVzdEhhbmRsZXIoSFRUUF9NRVRIT0RTLlBBVENILCBlbmRwb2ludCwgcGFyYW1zLCBoZWFkZXJzKVxuICB9LFxuICBkZWxldGVPYmplY3RUeXBlOiAocGFyYW1zKSA9PiB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBgJHtVUkl9L2J1Y2tldHMvJHtidWNrZXRfY29uZmlnLnNsdWd9L29iamVjdC10eXBlcy8ke3BhcmFtcy5zbHVnfWBcbiAgICBpZiAoYnVja2V0X2NvbmZpZy53cml0ZV9rZXkpIHtcbiAgICAgIGhlYWRlcnMgPSB7XG4gICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiBgQmVhcmVyICR7YnVja2V0X2NvbmZpZy53cml0ZV9rZXl9YFxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdEhhbmRsZXIoSFRUUF9NRVRIT0RTLkRFTEVURSwgZW5kcG9pbnQsIG51bGwsIGhlYWRlcnMpXG4gIH1cbn0pXG5cbm1vZHVsZS5leHBvcnRzID0gb2JqZWN0VHlwZU1ldGhvZHNcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxlQUFnQkEsT0FBTyxDQUFDLHNCQUFELENBQXZCO0FBQUEsSUFBUUMsR0FBUixZQUFRQSxHQUFSOztBQUNBLElBQU1DLFlBQVksR0FBR0YsT0FBTyxDQUFDLHlCQUFELENBQTVCOztBQUNBLGdCQUEyQkEsT0FBTyxDQUFDLDRCQUFELENBQWxDO0FBQUEsSUFBUUcsY0FBUixhQUFRQSxjQUFSOztBQUNBLElBQUlDLE9BQUo7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDQyxhQUFEO0VBQUEsT0FBb0I7SUFDNUNDLGNBQWMsRUFBRSx3QkFBQ0MsTUFBRCxFQUFZO01BQzFCLElBQUlDLFFBQVEsYUFBTVIsR0FBTixzQkFBcUJLLGFBQWEsQ0FBQ0ksSUFBbkMsb0NBQWlFSixhQUFhLENBQUNLLFFBQS9FLENBQVo7TUFDQSxPQUFPUixjQUFjLENBQUNELFlBQVksQ0FBQ1UsR0FBZCxFQUFtQkgsUUFBbkIsQ0FBckI7SUFDRCxDQUoyQztJQUs1Q0ksYUFBYSxFQUFFLHVCQUFDTCxNQUFELEVBQVk7TUFDekIsSUFBSUMsUUFBUSxhQUFNUixHQUFOLHNCQUFxQkssYUFBYSxDQUFDSSxJQUFuQywyQkFBd0RGLE1BQU0sQ0FBQ0UsSUFBL0QsdUJBQWdGSixhQUFhLENBQUNLLFFBQTlGLENBQVo7TUFDQSxPQUFPUixjQUFjLENBQUNELFlBQVksQ0FBQ1UsR0FBZCxFQUFtQkgsUUFBbkIsQ0FBckI7SUFDRCxDQVIyQztJQVM1Q0ssYUFBYSxFQUFFLHVCQUFDTixNQUFELEVBQVk7TUFDekIsSUFBTUMsUUFBUSxhQUFNUixHQUFOLHNCQUFxQkssYUFBYSxDQUFDSSxJQUFuQyxrQkFBZDs7TUFDQSxJQUFJSixhQUFhLENBQUNTLFNBQWxCLEVBQTZCO1FBQzNCWCxPQUFPLEdBQUc7VUFDUixrQ0FBMkJFLGFBQWEsQ0FBQ1MsU0FBekM7UUFEUSxDQUFWO01BR0Q7O01BQ0QsT0FBT1osY0FBYyxDQUFDRCxZQUFZLENBQUNjLElBQWQsRUFBb0JQLFFBQXBCLEVBQThCRCxNQUE5QixFQUFzQ0osT0FBdEMsQ0FBckI7SUFDRCxDQWpCMkM7SUFrQjVDYSxjQUFjLEVBQUUsd0JBQUNULE1BQUQsRUFBWTtNQUMxQixJQUFNQyxRQUFRLGFBQU1SLEdBQU4sc0JBQXFCSyxhQUFhLENBQUNJLElBQW5DLDJCQUF3REYsTUFBTSxDQUFDRSxJQUEvRCxDQUFkOztNQUNBLElBQUlKLGFBQWEsQ0FBQ1MsU0FBbEIsRUFBNkI7UUFDM0JYLE9BQU8sR0FBRztVQUNSLGtDQUEyQkUsYUFBYSxDQUFDUyxTQUF6QztRQURRLENBQVY7TUFHRCxDQU55QixDQU8xQjs7O01BQ0EsT0FBT1AsTUFBTSxDQUFDRSxJQUFkO01BQ0EsT0FBT1AsY0FBYyxDQUFDRCxZQUFZLENBQUNnQixLQUFkLEVBQXFCVCxRQUFyQixFQUErQkQsTUFBL0IsRUFBdUNKLE9BQXZDLENBQXJCO0lBQ0QsQ0E1QjJDO0lBNkI1Q2UsZ0JBQWdCLEVBQUUsMEJBQUNYLE1BQUQsRUFBWTtNQUM1QixJQUFNQyxRQUFRLGFBQU1SLEdBQU4sc0JBQXFCSyxhQUFhLENBQUNJLElBQW5DLDJCQUF3REYsTUFBTSxDQUFDRSxJQUEvRCxDQUFkOztNQUNBLElBQUlKLGFBQWEsQ0FBQ1MsU0FBbEIsRUFBNkI7UUFDM0JYLE9BQU8sR0FBRztVQUNSLGtDQUEyQkUsYUFBYSxDQUFDUyxTQUF6QztRQURRLENBQVY7TUFHRDs7TUFDRCxPQUFPWixjQUFjLENBQUNELFlBQVksQ0FBQ2tCLE1BQWQsRUFBc0JYLFFBQXRCLEVBQWdDLElBQWhDLEVBQXNDTCxPQUF0QyxDQUFyQjtJQUNEO0VBckMyQyxDQUFwQjtBQUFBLENBQTFCOztBQXdDQWlCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpCLGlCQUFqQiJ9